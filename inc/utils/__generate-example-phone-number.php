<?php
/**
 * Generate an example phone number based on the country code and pattern.
 *
 * The example is generated by filling the pattern with zeros, except for Ukraine,
 * where the first code is taken from the pattern.
 *
 * @param string $iso Country ISO code.
 * @param string $pattern Pattern of the phone number for the country.
 * @param int    $length Length of the phone number for the country.
 *
 * @return string
 */
function generate_example_phone_number($country_code, $pattern, $length) {
    // Нормализация длины
    if (is_array($length)) {
        $length = max($length); // берём максимум для примера
    } elseif (!is_numeric($length)) {
        $length = 10; // дефолт
    }

    // Чистим паттерн от / ^ $
    $pattern = preg_replace('#^/#', '', $pattern);
    $pattern = preg_replace('#/$#', '', $pattern);
    $pattern = preg_replace('#^\^#', '', $pattern);
    $pattern = preg_replace('#\$$#', '', $pattern);

    // 1. (X|Y|Z) + \d{N}
    if (preg_match('/^\(([^)]+)\)\\\\d\{(\d+)\}$/', $pattern, $m)) {
        $prefixes = explode('|', $m[1]);
        $digits = (int)$m[2];
        return $prefixes[0] . str_repeat('0', $digits);
    }

    // 2. (X|Y|Z)\d{N}\d{M}
    if (preg_match('/^\(([^)]+)\)\\\\d\{(\d+)\}\\\\d\{(\d+)\}$/', $pattern, $m)) {
        $prefixes = explode('|', $m[1]);
        $digits1 = (int)$m[2];
        $digits2 = (int)$m[3];
        return $prefixes[0] . str_repeat('0', $digits1 + $digits2 - strlen($prefixes[0]));
    }

    // 3. [29]\d{8} или [2-7]\d{8}
    if (preg_match('/^\[(\d(?:-\d)?)\]\\\\d\{(\d+)\}$/', $pattern, $m)) {
        $first = strpos($m[1], '-') !== false ? explode('-', $m[1])[0] : $m[1];
        return $first . str_repeat('0', (int)$m[2]);
    }

    // 4. Просто \d{N}
    if (preg_match('/^\\\\d\{(\d+)\}$/', $pattern, $m)) {
        return str_repeat('0', (int)$m[1]);
    }

    // 5. Любой другой случай: берём только цифры/скобки из паттерна и дополняем нулями
    if (preg_match('/([0-9]+)/', $pattern, $m)) {
        $prefix = $m[1];
        return substr($prefix . str_repeat('0', $length), 0, $length);
    }

    // Fallback
    return str_repeat('0', $length);
}
